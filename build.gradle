plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
}

sourceSets {
    dbConnect {
        java {
            srcDir 'src/main/java'
            include 'dbConnect/**'
        }
    }
}

group 'Arsky.TCB'
version '1.7'

repositories {
    flatDir {
        dirs 'Lib'
    }
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation fileTree('Lib') { include '*.jar' }
    implementation("org.mongodb:mongodb-drive-sync:5.3.1")
    implementation("org.mongodb:bson:5.3.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

tasks.register('buildConnector', Jar) {
    group = 'build'
    description = 'Database Connector and SQL statement parser.'
    from sourceSets.dbConnect.output
    archiveBaseName = 'DBConnect'
    archiveVersion = project.version
    destinationDirectory = file("${buildDir}/libs")
}

tasks.register('buildJavadoc', Javadoc) {
    group = 'documentation'
    description = 'Generate JavaDoc.'
    source = sourceSets.dbConnect.allJava
    classpath = sourceSets.dbConnect.compileClasspath
    destinationDir = file("${buildDir}/docs/javadoc")
}

tasks.register('javadocJar', Jar) {
    group = 'documentation'
    description = 'Turn html generated documents to jar file.'
    dependsOn buildJavadoc
    from buildJavadoc.destinationDir
    archiveClassifier.set('javadoc')
}

artifacts {
    archives(buildConnector)
    archives(javadocJar)
}